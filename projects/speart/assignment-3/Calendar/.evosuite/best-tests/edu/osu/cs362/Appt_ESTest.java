/*
 * This file was automatically generated by EvoSuite
 * Thu May 11 23:35:41 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      String string0 = appt0.toString();
      assertEquals("\t11/1/11 at 1:1am , [BK{qKU4b, \n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 316, 316, 316, "/", "/");
      appt0.setStartDay(31);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(1, appt0.getStartMinute());
      assertEquals(1, appt0.getStartDay());
      assertEquals("", appt0.getDescription());
      assertTrue(boolean0);
      assertEquals(11, appt0.getStartYear());
      assertEquals(" [BK{qKU4b", appt0.getTitle());
      assertEquals(1, appt0.getStartHour());
      assertEquals(11, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertNotNull(string0);
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(109, 109, 12, 109, 12, "EyB|ol", "EyB|ol");
      int int0 = appt0.getStartYear();
      assertEquals("EyB|ol", appt0.getTitle());
      assertEquals(12, int0);
      assertFalse(appt0.getValid());
      assertEquals(12, appt0.getStartDay());
      assertEquals(109, appt0.getStartMinute());
      assertEquals(109, appt0.getStartHour());
      assertEquals("EyB|ol", appt0.getDescription());
      assertEquals(109, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt((-79), 2328, (-79), (-709), (-709), "1697-02-01T00:00:00Z", "*EniKe8?'E\"{'Ee>)mu");
      int int0 = appt0.getStartYear();
      assertEquals(-79, appt0.getStartHour());
      assertEquals(-709, appt0.getStartMonth());
      assertEquals(2328, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals((-709), int0);
      assertEquals("1697-02-01T00:00:00Z", appt0.getTitle());
      assertEquals(-79, appt0.getStartDay());
      assertEquals("*EniKe8?'E\"{'Ee>)mu", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt((-1), (-1), (-1), 0, 0, "UnknownField", "RtIqMJmPMlX9u");
      int int0 = appt0.getStartMonth();
      assertEquals(-1, appt0.getStartHour());
      assertEquals("UnknownField", appt0.getTitle());
      assertEquals(-1, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals("RtIqMJmPMlX9u", appt0.getDescription());
      assertEquals(0, int0);
      assertEquals(-1, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 59, 59, 23, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(59, appt0.getStartDay());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(23, appt0.getStartYear());
      assertEquals(59, int0);
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt((-538), (-538), (-538), (-538), 0, (String) null, (String) null);
      int int0 = appt0.getStartMinute();
      assertEquals(-538, appt0.getStartMonth());
      assertEquals(-538, appt0.getStartHour());
      assertEquals((-538), int0);
      assertEquals(-538, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2714, (-1030), (-1030), "z", "z");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(2714, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1030, appt0.getStartYear());
      assertEquals(-1030, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals("z", appt0.getDescription());
      assertEquals("z", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(Integer.MAX_VALUE, Integer.MAX_VALUE, 0, (-1), 3288, "m", "m");
      int int0 = appt0.getStartHour();
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartMonth());
      assertEquals("m", appt0.getDescription());
      assertEquals(3288, appt0.getStartYear());
      assertEquals(2147483647, appt0.getStartMinute());
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals("m", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      int int0 = appt0.getStartDay();
      assertEquals(1, appt0.getStartMinute());
      assertEquals(1, int0);
      assertEquals("", appt0.getDescription());
      assertTrue(appt0.getValid());
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(" [BK{qKU4b", appt0.getTitle());
      assertEquals(1, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt((-599), (-599), (-599), (-599), (-599), "", "");
      appt0.getDescription();
      assertFalse(appt0.getValid());
      assertEquals(-599, appt0.getStartDay());
      assertEquals(-599, appt0.getStartMinute());
      assertEquals(-599, appt0.getStartMonth());
      assertEquals(-599, appt0.getStartYear());
      assertEquals(-599, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-1078), 744, 3973, (-1078), 3973, "", "");
      appt0.setDescription("");
      assertEquals(3973, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(744, appt0.getStartMinute());
      assertEquals(-1078, appt0.getStartMonth());
      assertEquals(3973, appt0.getStartDay());
      assertEquals(-1078, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2371), 0, (-2686), (String) null, (String) null);
      appt0.setDescription((String) null);
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-2371, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-2686, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 316, 316, 316, "/", "/");
      appt0.setTitle("/");
      assertEquals(316, appt0.getStartYear());
      assertEquals("/", appt0.getDescription());
      assertEquals(316, appt0.getStartDay());
      assertEquals("/", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(316, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-538), (-538), (-538), (-538), 0, (String) null, (String) null);
      appt0.setTitle((String) null);
      assertEquals(-538, appt0.getStartDay());
      assertEquals(-538, appt0.getStartMonth());
      assertEquals(-538, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(-538, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-2955), (-2955), (-2955), (-2955), (-2955), "JO4hmh-", "JO4hmh-");
      String string0 = appt0.getTitle();
      assertEquals(-2955, appt0.getStartMonth());
      assertEquals(-2955, appt0.getStartMinute());
      assertEquals(-2955, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-2955, appt0.getStartDay());
      assertEquals("JO4hmh-", appt0.getDescription());
      assertEquals(-2955, appt0.getStartHour());
      assertEquals("JO4hmh-", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-2317), (-2317), (-2317), (-2317), (-2317), "<~!", "<~!");
      int int0 = appt0.getStartDay();
      assertEquals(-2317, appt0.getStartMonth());
      assertEquals(-2317, appt0.getStartMinute());
      assertEquals(-2317, appt0.getStartYear());
      assertEquals((-2317), int0);
      assertEquals("<~!", appt0.getDescription());
      assertEquals("<~!", appt0.getTitle());
      assertEquals(-2317, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 316, 316, 316, "/", "/");
      boolean boolean0 = appt0.getValid();
      assertEquals(0, appt0.getStartMinute());
      assertFalse(boolean0);
      assertEquals(316, appt0.getStartDay());
      assertEquals(316, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals("/", appt0.getDescription());
      assertEquals(316, appt0.getStartYear());
      assertEquals("/", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt((-1078), 744, 3973, (-1078), 3973, "", "");
      int int0 = appt0.getStartHour();
      assertEquals((-1078), int0);
      assertFalse(appt0.getValid());
      assertEquals(3973, appt0.getStartDay());
      assertEquals(-1078, appt0.getStartMonth());
      assertEquals(744, appt0.getStartMinute());
      assertEquals(3973, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      int int0 = appt0.getStartMinute();
      assertTrue(appt0.getValid());
      assertEquals(11, appt0.getStartYear());
      assertEquals("", appt0.getDescription());
      assertEquals(1, int0);
      assertEquals(1, appt0.getStartHour());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(" [BK{qKU4b", appt0.getTitle());
      assertEquals(1, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 316, 316, 316, "/", "/");
      String string0 = appt0.getDescription();
      assertEquals(316, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(316, appt0.getStartMonth());
      assertEquals("/", string0);
      assertEquals("/", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(316, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-1023), (-1023), "|DG?W:>!$", "|DG?W:>!$");
      assertEquals(-1023, appt0.getStartMonth());
      
      appt0.setStartMonth(12);
      String string0 = appt0.toString();
      assertEquals("\t12/12/-1023 at 12:12pm ,|DG?W:>!$, |DG?W:>!$\n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 23, 23, "", "");
      assertEquals(23, appt0.getStartMonth());
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartYear());
      assertEquals(23, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      appt0.setStartMinute(818);
      assertEquals(818, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, (-571), 31, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(31, appt0.getStartYear());
      assertEquals(2147483647, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(2147483647, appt0.getStartDay());
      assertEquals(2147483647, appt0.getStartMinute());
      assertEquals((-571), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt((-413), (-413), (-413), 1984, 0, "InvalidXGCFields", "InvalidXGCFields");
      int int0 = appt0.getStartYear();
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(-413, appt0.getStartMinute());
      assertEquals("InvalidXGCFields", appt0.getTitle());
      assertEquals(-413, appt0.getStartHour());
      assertEquals(1984, appt0.getStartMonth());
      assertEquals("InvalidXGCFields", appt0.getDescription());
      assertEquals(-413, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(11, 1, 1, (-1078), 2907, "", "");
      assertEquals(1, appt0.getStartMinute());
      
      appt0.setStartMinute((-1078));
      assertEquals(2907, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(11, 1, 1, (-1078), 2907, "", "");
      assertEquals(2907, appt0.getStartYear());
      
      appt0.setStartYear((-1078));
      assertEquals(11, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 11, 11, " [BK{qKU4b", "");
      appt0.setStartDay(37);
      appt0.toString();
      assertEquals(37, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(11, 1, 1, (-1078), 2907, "", "");
      appt0.setStartHour(11);
      assertEquals(11, appt0.getStartHour());
      assertEquals(2907, appt0.getStartYear());
      assertEquals(1, appt0.getStartDay());
      assertEquals(1, appt0.getStartMinute());
      assertEquals(-1078, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(11, 1, 1, (-1078), 2907, "", "");
      assertEquals(-1078, appt0.getStartMonth());
      
      appt0.setStartMonth(1);
      String string0 = appt0.toString();
      assertEquals("\t1/1/2907 at 11:1am ,, \n", string0);
  }
}
