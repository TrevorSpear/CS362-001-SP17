/*
 * This file was automatically generated by EvoSuite
 * Thu May 11 09:25:18 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;

public class Appt_ESTest{

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(5, 5, 5, 5, 5, "NQLtqaC", "NQLtqaC");
      String string0 = appt0.toString();
      assertEquals("\t5/5/5 at 5:5am ,NQLtqaC, NQLtqaC\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 23, 23, "InvRlidXGCValue-milli", "InvRlidXGCValue-milli");
      assertEquals("InvRlidXGCValue-milli", appt0.getDescription());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartMonth());
      assertEquals(23, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("InvRlidXGCValue-milli", appt0.getTitle());
      assertEquals(23, appt0.getStartHour());
      assertEquals(23, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 2, 2, 11, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(11, appt0.getStartHour());
      assertEquals(2, appt0.getStartDay());
      assertEquals(11, appt0.getStartYear());
      assertTrue(boolean0);
      assertEquals(2, appt0.getStartMonth());
      assertEquals(11, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(37, 37, 37, 37, 37, "q{yg/pWQzy;)diw>Xe", "b");
      String string0 = appt0.getTitle();
      assertEquals(37, appt0.getStartHour());
      assertEquals("q{yg/pWQzy;)diw>Xe", string0);
      assertEquals(37, appt0.getStartYear());
      assertEquals("b", appt0.getDescription());
      assertEquals(37, appt0.getStartDay());
      assertEquals(37, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(37, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(1629, 1629, 1629, 1629, 1629, "\n", "\n");
      int int0 = appt0.getStartYear();
      assertEquals("\n", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("\n", appt0.getTitle());
      assertEquals(1629, appt0.getStartMinute());
      assertEquals(1629, appt0.getStartMonth());
      assertEquals(1629, appt0.getStartDay());
      assertEquals(1629, int0);
      assertEquals(1629, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt((-571), (-571), (-571), (-571), (-571), "7ih357f-ISU}", "pppmM]x1]{<yJ(mT");
      int int0 = appt0.getStartYear();
      assertEquals(-571, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-571, appt0.getStartMonth());
      assertEquals("pppmM]x1]{<yJ(mT", appt0.getDescription());
      assertEquals(-571, appt0.getStartMinute());
      assertEquals((-571), int0);
      assertEquals(-571, appt0.getStartDay());
      assertEquals("7ih357f-ISU}", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt((-1), 3320, (-22), 1165, (-1), "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(-1, appt0.getStartHour());
      assertEquals(3320, appt0.getStartMinute());
      assertEquals(1165, int0);
      assertEquals(-22, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "!_<+6Y1a]vKt", "!_<+6Y1a]vKt");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals("!_<+6Y1a]vKt", appt0.getTitle());
      assertEquals("!_<+6Y1a]vKt", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(2983, 2983, 89, 89, 0, "6U|XT;H{AnAM", "6U|XT;H{AnAM");
      int int0 = appt0.getStartMinute();
      assertEquals(2983, appt0.getStartHour());
      assertEquals(89, appt0.getStartMonth());
      assertEquals(2983, int0);
      assertEquals(89, appt0.getStartDay());
      assertEquals("6U|XT;H{AnAM", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertEquals("6U|XT;H{AnAM", appt0.getDescription());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-705), (-705), 16, "NPrl3wZNw,EMGI4", "NPrl3wZNw,EMGI4");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals(16, appt0.getStartYear());
      assertEquals("NPrl3wZNw,EMGI4", appt0.getTitle());
      assertEquals(-705, appt0.getStartMonth());
      assertEquals("NPrl3wZNw,EMGI4", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(-705, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "", "/.\"dG]r>Bx]d(M");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals("/.\"dG]r>Bx]d(M", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals("", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(1, 31, 31, 1, 1, "D", "D");
      String string0 = appt0.getDescription();
      assertEquals("D", string0);
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartMonth());
      assertEquals("D", appt0.getTitle());
      assertEquals(31, appt0.getStartDay());
      assertTrue(appt0.getValid());
      assertEquals(31, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      appt0.setDescription("#compare(Duration duration)");
      assertEquals("#compare(Duration duration)", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(1073, 1073, (-1), (-1), 1833, (String) null, (String) null);
      appt0.setDescription((String) null);
      assertEquals(1833, appt0.getStartYear());
      assertEquals(-1, appt0.getStartMonth());
      assertEquals(1073, appt0.getStartHour());
      assertEquals(-1, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(1073, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(1, 31, 31, 1, 1, "D", "D");
      appt0.setTitle("D");
      assertTrue(appt0.getValid());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartYear());
      assertEquals(31, appt0.getStartMinute());
      assertEquals("D", appt0.getDescription());
      assertEquals(31, appt0.getStartDay());
      assertEquals(1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(0, 70, 0, 70, (-3647), (String) null, "dzTA_,BY)4^");
      assertEquals("", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertFalse(appt0.getValid());
      assertEquals(-3647, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(70, appt0.getStartMinute());
      assertEquals("dzTA_,BY)4^", appt0.getDescription());
      assertEquals(70, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-1), 3320, (-22), 1165, (-1), "", "");
      int int0 = appt0.getStartDay();
      assertEquals((-22), int0);
      assertEquals(-1, appt0.getStartHour());
      assertEquals(1165, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-1, appt0.getStartYear());
      assertEquals(3320, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 0, 0, 11, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(11, appt0.getStartHour());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(boolean0);
      assertEquals(0, appt0.getStartDay());
      assertEquals(11, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      int int0 = appt0.getStartHour();
      assertEquals(2, appt0.getStartYear());
      assertEquals(-160, appt0.getStartMonth());
      assertEquals(-1, appt0.getStartDay());
      assertEquals((-794), int0);
      assertEquals(-794, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-1731), (-1731), 0, (-2828), 0, (String) null, (String) null);
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(-1731, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-2828, appt0.getStartMonth());
      assertEquals(-1731, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-253), (-253), 0, (-253), (-253), "", (String) null);
      int int0 = appt0.getStartMinute();
      assertEquals(-253, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-253, appt0.getStartMonth());
      assertEquals((-253), int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals(-253, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(14, 14, 2080, 14, 2080, "", "");
      appt0.getDescription();
      assertEquals(2080, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(2080, appt0.getStartYear());
      assertEquals(14, appt0.getStartMinute());
      assertEquals(14, appt0.getStartHour());
      assertEquals(14, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-2373), (-2373), 0, 0, (-2373), "lW]Kz;,&\"<ePQ.vRf", "\t");
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals("lW]Kz;,&\"<ePQ.vRf", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(-2373, appt0.getStartYear());
      assertEquals(-2373, appt0.getStartHour());
      assertEquals(-2373, appt0.getStartMinute());
      assertEquals("\t", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "MzStR", "MzStR");
      String string0 = appt0.toString();
      assertEquals("\t12/12/12 at 12:12pm ,MzStR, MzStR\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      String string0 = appt0.toString();
      assertEquals(-794, appt0.getStartMinute());
      assertEquals(2, appt0.getStartYear());
      assertNull(string0);
      assertEquals(-1, appt0.getStartDay());
      assertEquals(-160, appt0.getStartMonth());
      assertEquals(-794, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 2349, 2349, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertEquals(1, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertNotNull(string0);
      assertEquals(2349, appt0.getStartYear());
      assertEquals(1, appt0.getStartDay());
      assertEquals(2349, appt0.getStartMonth());
      assertEquals(1, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 4, 0, 0, "", "BbuOUP3X");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("", appt0.getTitle());
      assertEquals(4, int0);
      assertFalse(appt0.getValid());
      assertEquals("BbuOUP3X", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "6f3-d>-f0<T060]fZ", "6f3-d>-f0<T060]fZ");
      appt0.setStartMinute(1555);
      assertEquals(1555, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(84, 3732, 84, (-449), 11, ":", ":");
      int int0 = appt0.getStartMonth();
      assertEquals(":", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(11, appt0.getStartYear());
      assertEquals(":", appt0.getDescription());
      assertEquals(3732, appt0.getStartMinute());
      assertEquals(84, appt0.getStartDay());
      assertEquals((-449), int0);
      assertEquals(84, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      appt0.setStartMinute(59);
      appt0.setStartHour(12);
      assertEquals(59, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      assertEquals(2, appt0.getStartYear());
      
      appt0.setStartYear((-160));
      assertEquals(-160, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "6f3-d>-f0<T060]fZ", "6f3-d>-f0<T060]fZ");
      appt0.setStartDay(1555);
      assertEquals(1555, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt((-794), (-794), (-1), (-160), 2, "", "");
      appt0.setStartHour(12);
      int int0 = appt0.getStartHour();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(1, 31, 31, 1, 1, "D", "D");
      assertEquals(1, appt0.getStartMonth());
      
      appt0.setStartMonth(31);
      assertEquals(31, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "NQtqC", "NQtqC");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/11 at 11:11am ,NQtqC, NQtqC\n", string0);
  }
}
